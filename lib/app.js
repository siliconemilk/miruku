// Generated by CoffeeScript 1.4.0
(function() {
  var Character, Game, GameSession, alignToolWithTarget, createDialog, deinitEdit, disableEdit, disableSubmitOnClick, domain, enableEdit, followOnDrag, initEdit, port, root;

  disableSubmitOnClick = function(event, ui) {
    $(this).addClass('noclick');
  };

  followOnDrag = function(event, ui) {
    var offset, width;
    width = $(this).outerWidth();
    offset = {};
    offset.left = width + ui.offset.left;
    offset.top = ui.offset.top;
    return $(this).next().offset(offset);
  };

  alignToolWithTarget = function(target) {
    var editable, hidden, offset, parent, width, _i, _len, _ref;
    parent = $(target).parent();
    hidden = $(parent).is(":hidden");
    if (hidden) {
      $(parent).show();
    }
    _ref = $(target).find('.editable');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      editable = _ref[_i];
      width = $(editable).outerWidth();
      offset = {};
      offset.left = width + $(editable).offset().left;
      offset.top = $(editable).offset().top;
      $(editable).next().offset(offset);
    }
    if (hidden && (parent != null)) {
      return $(parent).hide();
    }
  };

  initEdit = function() {
    var editButton;
    window.editing = true;
    $(document).on('dialogopen', function(event, ui) {
      return alignToolWithTarget(event.target);
    });
    $(document).on('dialogbeforeopen', function(event, ui) {
      return enableEdit(event.target);
    });
    $(document).on('click', '.tool', function() {
      return createDialog("editMenuDialog");
    });
    enableEdit(document);
    editButton = $("#clickme");
    editButton.text("DISABLE EDITING");
    return editButton.one("click", function() {
      return deinitEdit();
    });
  };

  deinitEdit = function() {
    var editButton;
    window.editing = false;
    disableEdit(document);
    $(document).off('dialogopen');
    $(document).off('dialogbeforeopen');
    $(document).off("click", ".tool");
    editButton = $("#clickme");
    editButton.text("ENABLE EDITING");
    return editButton.one("click", function() {
      return initEdit();
    });
  };

  enableEdit = function(target) {
    if (window.editing && !$(target).find('.editable').is('.editing')) {
      console.log($(target).find('.editable'));
      $(target).find('.editable').after('<button class="tool"></button>').next().button({
        text: false,
        icons: {
          primary: "ui-icon-wrench"
        }
      });
      alignToolWithTarget(target);
      $(target).find('.editable.draggable-element').draggable({
        cancel: false,
        grid: [10, 10],
        start: disableSubmitOnClick,
        drag: followOnDrag
      });
      return $(target).find('.editable').addClass("editing");
    }
  };

  disableEdit = function(target) {
    if (!window.editing && $(target).find('.editable').is('.editing')) {
      $('.tool').remove();
      $('.editable.ui-draggable').draggable("destroy");
      return $('.editable').removeClass("editing");
    }
  };

  Character = (function() {

    function Character(name) {
      this.name = name;
    }

    Character.prototype.strength = 0;

    Character.prototype.toughness = 0;

    Character.prototype.speed = 0;

    Character.prototype.intelligence = 0;

    Character.prototype.health = 0;

    Character.prototype.fatigue = 0;

    Character.prototype.level = 0;

    Character.prototype.experience = 0;

    return Character;

  })();

  Game = (function() {

    function Game(state) {
      this.state = state;
    }

    Game.prototype.importFile = function(filename) {};

    Game.prototype.exportFile = function(filename) {};

    return Game;

  })();

  GameSession = (function() {

    function GameSession() {}

    GameSession.prototype.save = function() {};

    GameSession.prototype.load = function(slot) {};

    GameSession.Player = new Character("Miruku");

    return GameSession;

  })();

  createDialog = function(type, target) {
    var DialogConstruct, NewDialog;
    $('body').append("<div id=\"" + type + "container\"></div>");
    DialogConstruct = $('#' + type + "container");
    $(DialogConstruct).load("http://" + domain + ":" + port + root + "content/" + type + ".html", function() {
      var someHeight, someWidth;
      someHeight = $('#' + type).data('height');
      someWidth = $('#' + type).data('width');
      console.log(someWidth + " and " + someHeight);
      $(this).dialog({
        height: someHeight,
        width: someWidth,
        modal: $('#' + type).data('modal'),
        resizable: false,
        autoOpen: false,
        title: $('#' + type).data('title'),
        close: function(event, ui) {
          $(this).dialog('destroy').remove();
          return $(document).off('click', '#start-game');
        }
      });
      $(this).find(':button').button();
      return $(DialogConstruct).dialog("open");
    });
    NewDialog = $(DialogConstruct);
    $(document).on('click', '#start-game', function(event) {
      if ($(this).hasClass('noclick')) {
        return $(this).removeClass('noclick');
      } else {
        return NewDialog.dialog("close");
      }
    });
    return NewDialog;
  };

  (function ($) {
    $.ui.dialog.prototype.open = function (event){ 
        var that = this;
        if(false === this._trigger('beforeOpen', event)){
            return;
        }
        if ( this._isOpen ) {
            if ( this._moveToTop() ) {
                this._focusTabbable();
            }
            return;
        }
            
        this._isOpen = true;
        this.opener = $( this.document[0].activeElement );

        this._size();
        this._position();
        this._createOverlay();
        this._moveToTop( null, true );
        this._show( this.uiDialog, this.options.show, function() {
            that._focusTabbable();
            that._trigger("focus");
        });

        this._trigger("open");
        }
})(jQuery);;


  $(function() {
    $("#clickme").one("click", function() {
      return initEdit();
    });
    $("#showMenu").on("click", function() {
      return createDialog("menuDialog");
    });
    return $('#derp').button();
  });

  domain = "www.guineacode.com";

  port = 80;

  root = "/siliconemilk/miruku/";

}).call(this);
