// Generated by CoffeeScript 1.4.0
(function() {
  var Character, DialogFactory, Game, GameSession, disableEdit, disableSubmitOnClick, enableEdit, followOnDrag, loadMenuDialog, mainMenuDialog;

  Character = (function() {

    function Character(name) {
      this.name = name;
    }

    Character.prototype.strength = 0;

    Character.prototype.toughness = 0;

    Character.prototype.speed = 0;

    Character.prototype.intelligence = 0;

    Character.prototype.health = 0;

    Character.prototype.fatigue = 0;

    Character.prototype.level = 0;

    Character.prototype.experience = 0;

    return Character;

  })();

  Game = (function() {

    function Game(state) {
      this.state = state;
    }

    Game.prototype.importFile = function(filename) {};

    Game.prototype.exportFile = function(filename) {};

    return Game;

  })();

  GameSession = (function() {

    function GameSession() {}

    GameSession.prototype.save = function() {};

    GameSession.prototype.load = function(slot) {};

    GameSession.Player = new Character("Miruku");

    return GameSession;

  })();

  DialogFactory = (function() {

    function DialogFactory() {
      this.dialogs = {};
    }

    DialogFactory.prototype.show = function(dialog_name) {
      if (!this.dialogs[dialog_name].dialog("isOpen")) {
        return this.dialogs[dialog_name].dialog("open");
      } else {
        return console.log("already open");
      }
    };

    DialogFactory.prototype.register = function(name, dialog) {
      return this.dialogs[name] = dialog;
    };

    return DialogFactory;

  })();

  mainMenuDialog = function() {
    var DialogConstruct, NewDialog;
    DialogConstruct = "<div id=\"MenuDialog\">\n    <div class=\"menu-content\">\n        <div class=\"absCenter\">\n            <button id=\"start-game\" class=\"draggable-element editable\">Start Game</button>\n            <button id=\"options\" class=\"draggable-element editable\">Options</button>\n            <button id=\"how-to\" class=\"draggable-element editable\">How-To</button>\n        </div>\n    </div>\n</div>";
    NewDialog = $(DialogConstruct);
    NewDialog.dialog({
      height: '240',
      width: '320',
      modal: true,
      resizable: false,
      closeOnEscape: false,
      autoOpen: false,
      title: 'Miruku Menu'
    });
    $("#start-game").on('click', function(event) {
      if ($(this).hasClass('noclick')) {
        return $(this).removeClass('noclick');
      } else {
        return NewDialog.dialog("close");
      }
    });
    return NewDialog;
  };

  loadMenuDialog = function() {
    return DialogConstruct;
  };

  (function ($) {
    $.fn.classes = function (callback) {
        var classes = [];
        $.each(this, function (i, v) {
            var splitClassName = v.className.split(/\s+/);
            for (var j in splitClassName) {
                var className = splitClassName[j];
                if ('' !== className) {
                    classes.push(className); // replace with 'classes.unshift(className);' to put classes in order of their appearance
                }
            }
        });
        classes = $.unique(classes);
        if ('function' === typeof callback) {
            for (var i in classes) {
                callback(classes[i]);
            }
        }
        return classes;
    };
})(jQuery);;


  $(function() {
    window.dialogFactory = new DialogFactory();
    window.dialogFactory.register("mainMenu", mainMenuDialog());
    window.dialogFactory.show("mainMenu");
    return $("#clickme").one("click", enableEdit);
  });

  disableSubmitOnClick = function(event, ui) {
    $(this).addClass('noclick');
  };

  followOnDrag = function(event, ui) {
    var offset, width;
    width = $(this).outerWidth();
    offset = {};
    offset.left = width + ui.offset.left;
    offset.top = ui.offset.top;
    return $(this).next().offset(offset);
  };

  enableEdit = function() {
    var classes, elements, item, itemClass, _i, _j, _len, _len1;
    $('.editable').after('<button class="tool"><img src="./content/cog_alt_16x16.png"></img></button>');
    elements = document.body.getElementsByTagName("*");
    for (_i = 0, _len = elements.length; _i < _len; _i++) {
      item = elements[_i];
      if ($(item).hasClass("editable")) {
        classes = $(item).classes();
        for (_j = 0, _len1 = classes.length; _j < _len1; _j++) {
          itemClass = classes[_j];
          switch (itemClass) {
            case "draggable-element":
              $(item).draggable({
                cancel: false,
                grid: [10, 10],
                start: disableSubmitOnClick,
                drag: followOnDrag
              });
          }
        }
      }
    }
    $("#clickme").text("DISABLE EDITING");
    $("#clickme").one("click", disableEdit);
    return window.dialogFactory.show("mainMenu");
  };

  disableEdit = function() {
    var classes, editButton, elements, item, itemClass, _i, _j, _len, _len1;
    $('.tool').remove();
    elements = document.body.getElementsByTagName("*");
    for (_i = 0, _len = elements.length; _i < _len; _i++) {
      item = elements[_i];
      if ($(item).hasClass("editable")) {
        classes = $(item).classes();
        for (_j = 0, _len1 = classes.length; _j < _len1; _j++) {
          itemClass = classes[_j];
          switch (itemClass) {
            case "draggable-element":
              $(item).draggable("option", "cancel", "input, textarea, button, select, option");
          }
        }
      }
    }
    editButton = $("#clickme");
    editButton.text("ENABLE EDITING");
    return editButton.one('click', enableEdit);
  };

}).call(this);
